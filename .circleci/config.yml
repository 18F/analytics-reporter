version: 2.1
jobs:
  develop_deploy:
    docker:
      - image: cimg/node:16.19.1-browsers
        environment:
          POSTGRES_USER: postgres
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: analytics_reporter_test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # - run:
      #     name: run tests
      #     command: npm test

      - run:
          name: Replace Data URL in manifest.yml file when deploying to develop
          command: |
              sed -i 's@name: analytics-reporter@name: analytics-reporter-develop@g' manifest.yml
              sed -i 's@- analytics-s3@- analytics-s3-dev@g' manifest.yml
              sed -i 's@- analytics-reporter-database@- analytics-reporter-database-develop@g' manifest.yml
              sed -i 's@<ANALYTICS_REPORT_IDS>@$ANALYTICS_REPORT_IDS@g' manifest.yml
              sed -i 's@<ANALYTICS_REPORTS_PATH>@$ANALYTICS_REPORTS_PATH@g' manifest.yml
              sed -i 's@<AWS_ACCESS_KEY_ID>@$ANALYTICS_ACESS_KEY_ID_DEV@g' manifest.yml
              sed -i 's@<AWS_BUCKET>@$AWS_BUCKET_DEV@g' manifest.yml
              sed -i 's@<AWS_BUCKET_PATH>@$AWS_BUCKET_PATH@g' manifest.yml
              sed -i 's@<AWS_CACHE_TIME>@$AWS_CACHE_TIME@g' manifest.yml
              sed -i 's@<AWS_DEFAULT_REGION>@$AWS_DEFAULT_REGION@g' manifest.yml
              sed -i 's@<AWS_REGION>@$AWS_DEFAULT_REGION@g' manifest.yml
              sed -i 's@<AWS_SECRET_ACCESS_KEY>@$AWS_SECRET_ACESS_KEY_DEV@g' manifest.yml
              sed -i 's@<BUCKET_NAME>@$BUCKET_NAME_DEV@g' manifest.yml
              sed -i 's@<POSTGRES_DATABASE>@$POSTGRES_DATABASE_DEV@g' manifest.yml
              sed -i 's@<POSTGRES_HOST>@$POSTGRES_HOST_DEV@g' manifest.yml
              sed -i 's@<POSTGRES_USER>@$POSTGRES_USER_DEV@g' manifest.yml
              mv manifest.yml mainfest.yml.src
              envsubst < manifest.yml.src > manifest.yml  

      - run:   
          name: Install CF CLI
          command: |
            sudo wget --user-agent "Mozilla" -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add - && sudo echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list && sudo apt-get update && sudo apt-get -y install cf8-cli curl 
      
      - run:
          name: deploy
          command: |
              set -e
              # Log into cloud.gov
              cf api api.fr.cloud.gov
              cf login -u $CF_USERNAME_DEV -p $CF_PASSWORD_DEV -o gsa-opp-analytics -s analytics-dev
              pwd
              ls -l
              cat manifest.yml
              cf push -f "./manifest.yml"
              cf logout

workflows:
  develop_workflow:
    jobs: 
      - develop_deploy:
          filters:
            branches:
              only:
                - develop

  # staging:
    # jobs: 
      # # - staging_deploy:
      #     filters:
      #       branches:
      #         only:
      #           - staging
                  
  # main_workflow:
  #   jobs: 
  #     - main_deploy:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #          
